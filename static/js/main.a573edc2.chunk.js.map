{"version":3,"sources":["Gallery.js","App.js","reportWebVitals.js","index.js"],"names":["Gallery","data","className","map","image","src","farm","server","id","secret","height","width","alt","title","App","useState","setData","search","setSearch","useEffect","onSubmit","e","preventDefault","axios","get","then","response","photos","photo","catch","error","console","log","size","type","onChange","target","value","name","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sPAkBeA,EAfC,SAAC,GAAY,IAAXC,EAAU,EAAVA,KACd,OACI,qBAAKC,UAAU,YAAf,SACA,qBAAKA,UAAU,OAAf,SACCD,EAAKE,KAAI,SAACC,GAAD,OAAU,8BACpB,qBAAKF,UAAU,WAAf,SACA,qBAAKG,IAAG,sBAAiBD,EAAME,KAAvB,6BAAgDF,EAAMG,OAAtD,YAAgEH,EAAMI,GAAtE,YAA4EJ,EAAMK,OAAlF,UACTC,OAAO,MAAMC,MAAM,MAAMC,IAAKR,EAAMS,WAHLT,EAAMI,YCqC7BM,EAvCH,WACV,MAAuBC,mBAAS,IAAhC,mBAAOd,EAAP,KAAYe,EAAZ,KACA,EAA2BD,mBAAS,IAApC,mBAAOE,EAAP,KAAcC,EAAd,KACAC,qBAAU,cACN,IAoBJ,OACE,8BACE,mCACE,kDAAyB,uBACzB,uBAAMC,SApBU,SAAAC,GACpBA,EAAEC,iBACFC,IACCC,IADD,oFAXW,mCAWX,iBAE8FP,EAF9F,8CAICQ,MAAK,SAAAC,GACJV,EAAQU,EAASzB,KAAK0B,OAAOC,UAE9BC,OAAM,SAAAC,GACLC,QAAQC,IACN,sDACAF,OAQA,UACE,uBAAOG,KAAK,KAAKC,KAAK,OAAOC,SAxBf,SAAAd,GACpBH,EAAUG,EAAEe,OAAOC,QAuByCA,MAAOpB,IAAS,uBAAM,uBAC5E,uBAAOiB,KAAK,SAASI,KAAK,cAE5B,uBACCrC,EAAKsC,QAAQ,EAAE,cAAC,EAAD,CAAStC,KAAMA,IAAQ,uDC1BhCuC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a573edc2.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css'\n\nconst Gallery = ({data}) => {\n    return (\n        <div className=\"container\">\n        <div className=\"row \">\n        {data.map((image) =><div key={image.id}>\n        <div className=\"col-md-4\">\n        <img src={`https://farm${image.farm}.staticflickr.com/${image.server}/${image.id}_${image.secret}_m.jpg`} \n       height=\"200\" width=\"250\" alt={image.title}/>\n        </div>\n        </div>)}\n        </div>\n        </div>\n    )\n}\n\nexport default Gallery\n","import React,{useEffect,useState} from 'react';\nimport axios from 'axios';\nimport Gallery from './Gallery';\n\nconst apiKey = \"636e1481b4f3c446d26b8eb6ebfe7127\";\nconst App = () => {\n  const [data,setData] = useState([]);\n  const [search,setSearch] = useState(\"\");\n  useEffect(()=>{\n    },[])\n  const changeHandler = e =>{\n    setSearch(e.target.value);\n  }\n  const submitHandler = e =>{\n    e.preventDefault();\n    axios\n    .get(\n      `https://api.flickr.com/services/rest/?method=flickr.photos.search&api_key=${apiKey}&tags=${search}&per_page=24&format=json&nojsoncallback=1`\n    )\n    .then(response => {\n      setData(response.data.photos.photo)\n    })\n    .catch(error => {\n      console.log(\n        \"Encountered an error with fetching and parsing data\",\n        error\n      );\n  })\n  }\n  return (\n    <div>\n      <center>\n        <h2>Gallery Snapshot</h2><br></br>\n        <form onSubmit={submitHandler}>\n          <input size=\"30\" type=\"text\" onChange={changeHandler} value={search}/><br /><br />\n          <input type=\"submit\" name=\"Search\" />\n        </form>\n        <br />\n        {data.length>=1?<Gallery data={data}/>:<h4>No Image Loaded</h4>}\n      </center>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}